import { createContractFormSchema } from "@/app/(with-sidebar)/(without-block-topRight-links)/edit-smart-contract/ContractPages";
import { FormControl, FormField, FormItem } from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { ContractType } from "@/lib/enums/utils";
import { cn } from "@/lib/utils";
import React from "react";
import { UseFormReturn } from "react-hook-form";
import { z } from "zod";

const PaymentStatement = ({
  form,
}: {
  form: UseFormReturn<z.infer<typeof createContractFormSchema>, any, undefined>;
}) => {
  return (
    <div className="flex items-center">
      <div className="rounded-lg bg-white px-4 py-3 leading-[50px] shadow-md">
        <span className="mr-4 text-sm">Doky is going to pay</span>

        <span
          className={cn(
            "inline-flex items-center whitespace-nowrap rounded-sm border bg-white px-2 pr-3 text-sm font-semibold text-black",
            form.formState.errors.percent && "border-red-600",
          )}
        >
          <FormField
            control={form.control}
            name="percent"
            render={({ field }) => {
              return (
                <FormItem className="">
                  <FormControl>
                    <Input
                      // {...field}
                      value={field.value}
                      onChange={(e) => field.onChange(parseInt(e.target.value))}
                      type="number"
                      placeholder="20"
                      className={cn(
                        "mx-auto inline w-8 rounded-sm border-0 bg-white px-0 text-center shadow-none !outline-none !ring-0",
                        /**
                         * @classes below are for removing arrows of input
                         */
                        "[appearance:textfield] [&::-webkit-inner-spin-button]:appearance-none [&::-webkit-outer-spin-button]:appearance-none",
                      )}
                    />
                  </FormControl>
                </FormItem>
              );
            }}
          />

          <span>%</span>
        </span>

        <span className="mx-4 text-sm">of the</span>

        <span
          className={cn(
            "inline-flex items-center gap-1 whitespace-nowrap rounded-sm border bg-white px-1 py-2.5 text-sm font-semibold text-black",
          )}
        >
          <FormField
            control={form.control}
            name="type"
            render={({ field }) => {
              return (
                <FormItem>
                  <FormControl>
                    <span>
                      <span
                        className={cn(
                          "cursor-pointer rounded-sm px-8 py-2 text-xs text-foreground/60",
                          {
                            "bg-gray-300 text-foreground":
                              field.value === ContractType.Revenue,
                          },
                        )}
                        onClick={() => field.onChange(ContractType.Revenue)}
                      >
                        Revenue
                      </span>
                      <span
                        className={cn(
                          "cursor-pointer rounded-sm px-8 py-2 text-xs text-foreground/60",
                          {
                            "bg-gray-300 text-foreground":
                              field.value === ContractType.Profile,
                          },
                        )}
                        onClick={() => field.onChange(ContractType.Profile)}
                      >
                        Profit
                      </span>
                    </span>
                  </FormControl>
                </FormItem>
              );
            }}
          />
        </span>
        <span className="mx-4 text-sm">generated by the revenue stream</span>
        {/* <Input type="text" className="flex-1 rounded-lg border p-2 md:w-44" /> */}
        <span
          className={cn(
            "inline-flex items-center whitespace-nowrap rounded-sm border bg-white px-2 pr-3 text-sm font-semibold text-black",
            form.formState.errors.revenueStream && "border-red-600",
          )}
        >
          <FormField
            control={form.control}
            name="revenueStream"
            render={({ field }) => {
              return (
                <FormItem className="">
                  <FormControl>
                    <Input
                      {...field}
                      placeholder="'' Web Application ''"
                      className={cn(
                        "mx-auto inline rounded-sm border-0 bg-white px-0 text-center text-xs shadow-none !outline-none !ring-0 placeholder:text-xs",
                      )}
                    />
                  </FormControl>
                </FormItem>
              );
            }}
          />
        </span>
      </div>
    </div>
  );
};
export default PaymentStatement;
